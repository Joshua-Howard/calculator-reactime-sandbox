{"ast":null,"code":"const snapShot = {\n  tree: null\n};\nconst mode = {\n  jumping: false,\n  paused: false,\n  locked: false\n};\n\nconst linkFiber = require('./linkFiber')(snapShot, mode);\n\nconst timeJump = require('./timeJump')(snapShot, mode);\n\nfunction getRouteURL(node) {\n  if (node.name === 'Router') {\n    return node.state.location.pathname;\n  }\n\n  if (node.children && node.children.length >= 1) {\n    const tempNode = node.children;\n\n    for (let index = 0; index < tempNode.length; index += 1) {\n      return getRouteURL(tempNode[index]);\n    }\n  }\n}\n\nwindow.addEventListener('message', ({\n  data: {\n    action,\n    payload\n  }\n}) => {\n  // runs automatically twice per second with inspectedElement\n  console.log(action);\n\n  switch (action) {\n    case 'jumpToSnap':\n      timeJump(payload); // Get the pathname from payload and add new entry to browser history\n      // MORE: https://developer.mozilla.org/en-US/docs/Web/API/History/pushState\n\n      window.history.pushState('', '', getRouteURL(payload));\n      break;\n\n    case 'setLock':\n      mode.locked = payload;\n      break;\n\n    case 'setPause':\n      mode.paused = payload;\n      break;\n\n    default:\n      break;\n  }\n});\nmodule.exports = linkFiber;","map":{"version":3,"sources":["/Users/josh/Documents/GitHub/calculator-reactime-sandbox/src/reactime-module/index.js"],"names":["snapShot","tree","mode","jumping","paused","locked","linkFiber","require","timeJump","getRouteURL","node","name","state","location","pathname","children","length","tempNode","index","window","addEventListener","data","action","payload","console","log","history","pushState","module","exports"],"mappings":"AAAA,MAAMA,QAAQ,GAAG;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAjB;AAEA,MAAMC,IAAI,GAAG;AACXC,EAAAA,OAAO,EAAE,KADE;AAEXC,EAAAA,MAAM,EAAE,KAFG;AAGXC,EAAAA,MAAM,EAAE;AAHG,CAAb;;AAMA,MAAMC,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAP,CAAuBP,QAAvB,EAAiCE,IAAjC,CAAlB;;AACA,MAAMM,QAAQ,GAAGD,OAAO,CAAC,YAAD,CAAP,CAAsBP,QAAtB,EAAgCE,IAAhC,CAAjB;;AAEA,SAASO,WAAT,CAAqBC,IAArB,EAA2B;AACzB,MAAIA,IAAI,CAACC,IAAL,KAAc,QAAlB,EAA4B;AAC1B,WAAOD,IAAI,CAACE,KAAL,CAAWC,QAAX,CAAoBC,QAA3B;AACD;;AACD,MAAIJ,IAAI,CAACK,QAAL,IAAiBL,IAAI,CAACK,QAAL,CAAcC,MAAd,IAAwB,CAA7C,EAAgD;AAC9C,UAAMC,QAAQ,GAAGP,IAAI,CAACK,QAAtB;;AACA,SAAK,IAAIG,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGD,QAAQ,CAACD,MAArC,EAA6CE,KAAK,IAAI,CAAtD,EAAyD;AACvD,aAAOT,WAAW,CAACQ,QAAQ,CAACC,KAAD,CAAT,CAAlB;AACD;AACF;AACF;;AAEDC,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV;AAAR,CAAD,KAAmC;AAAE;AACtEC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;;AACA,UAAQA,MAAR;AACE,SAAK,YAAL;AACEd,MAAAA,QAAQ,CAACe,OAAD,CAAR,CADF,CAEE;AACA;;AACAJ,MAAAA,MAAM,CAACO,OAAP,CAAeC,SAAf,CAAyB,EAAzB,EAA6B,EAA7B,EAAiClB,WAAW,CAACc,OAAD,CAA5C;AACA;;AACF,SAAK,SAAL;AACErB,MAAAA,IAAI,CAACG,MAAL,GAAckB,OAAd;AACA;;AACF,SAAK,UAAL;AACErB,MAAAA,IAAI,CAACE,MAAL,GAAcmB,OAAd;AACA;;AACF;AACE;AAdJ;AAgBD,CAlBD;AAoBAK,MAAM,CAACC,OAAP,GAAiBvB,SAAjB","sourcesContent":["const snapShot = { tree: null };\n\nconst mode = {\n  jumping: false,\n  paused: false,\n  locked: false,\n};\n\nconst linkFiber = require('./linkFiber')(snapShot, mode);\nconst timeJump = require('./timeJump')(snapShot, mode);\n\nfunction getRouteURL(node) {\n  if (node.name === 'Router') {\n    return node.state.location.pathname;\n  }\n  if (node.children && node.children.length >= 1) {\n    const tempNode = node.children;\n    for (let index = 0; index < tempNode.length; index += 1) {\n      return getRouteURL(tempNode[index]);\n    }\n  }\n}\n\nwindow.addEventListener('message', ({ data: { action, payload } }) => { // runs automatically twice per second with inspectedElement\n  console.log(action)\n  switch (action) {\n    case 'jumpToSnap':\n      timeJump(payload);\n      // Get the pathname from payload and add new entry to browser history\n      // MORE: https://developer.mozilla.org/en-US/docs/Web/API/History/pushState\n      window.history.pushState('', '', getRouteURL(payload));\n      break;\n    case 'setLock':\n      mode.locked = payload;\n      break;\n    case 'setPause':\n      mode.paused = payload;\n      break;\n    default:\n      break;\n  }\n});\n\nmodule.exports = linkFiber;\n"]},"metadata":{},"sourceType":"module"}